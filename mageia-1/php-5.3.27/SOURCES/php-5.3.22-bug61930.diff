
http://git.php.net/?p=php-src.git;a=commit;h=7b0107cc5d3d90655957680ef9cf916dce6875a7

diff -Naurp php-5.3.22/ext/openssl/tests/bug61930.phpt php-5.3.22.oden/ext/openssl/tests/bug61930.phpt
--- php-5.3.22/ext/openssl/tests/bug61930.phpt	1970-01-01 01:00:00.000000000 +0100
+++ php-5.3.22.oden/ext/openssl/tests/bug61930.phpt	2013-03-15 13:33:11.370320935 +0100
@@ -0,0 +1,24 @@
+--TEST--
+Bug #61930: openssl corrupts ssl key resource when using openssl_get_publickey()
+--SKIPIF--
+<?php
+if (!extension_loaded("openssl")) die("skip");
+?>
+--FILE--
+<?php
+$cert = file_get_contents(__DIR__.'/cert.crt');
+
+$data = <<<DATA
+Please verify me
+DATA;
+
+$sig = 'f9Gyb6NV/ENn7GUa37ygTLcF93XHf5fbFTnoYF/O+fXbq3iChGUbET0RuhOsptlAODi6JsDLnJO4ikcVZo0tC1fFTj3LyCuPy3ZdgJbbVxQ/rviROCmuMFTqUW/Xa2LQYiapeCCgLQeWTLg7TM/BoHEkKbKLG/XT5jHvep1758A=';
+
+$key = openssl_get_publickey($cert);
+var_dump(openssl_get_publickey($key));
+var_dump(openssl_verify($data, base64_decode($sig), $key));
+?>
+--EXPECTF--
+resource(%d) of type (OpenSSL key)
+int(1)
+
diff -Naurp php-5.3.22/ext/openssl/openssl.c php-5.3.22.oden/ext/openssl/openssl.c
--- php-5.3.22/ext/openssl/openssl.c	2013-02-20 11:52:37.000000000 +0100
+++ php-5.3.22.oden/ext/openssl/openssl.c	2013-03-15 13:33:19.927321403 +0100
@@ -3128,6 +3128,7 @@ PHP_FUNCTION(openssl_pkey_get_public)
 	if (pkey == NULL) {
 		RETURN_FALSE;
 	}
+	zend_list_addref(Z_LVAL_P(return_value));
 }
 /* }}} */
 
@@ -3164,6 +3165,7 @@ PHP_FUNCTION(openssl_pkey_get_private)
 	if (pkey == NULL) {
 		RETURN_FALSE;
 	}
+	zend_list_addref(Z_LVAL_P(return_value));
 }
 
 /* }}} */
diff -Naurp php-5.3.22/ext/openssl/xp_ssl.c php-5.3.22.oden/ext/openssl/xp_ssl.c
--- php-5.3.22/ext/openssl/xp_ssl.c	2013-02-20 11:52:37.000000000 +0100
+++ php-5.3.22.oden/ext/openssl/xp_ssl.c	2013-03-15 13:33:46.017322858 +0100
@@ -391,6 +391,18 @@ static inline int php_openssl_setup_cryp
 	}
 #endif
 
+#if OPENSSL_VERSION_NUMBER >= 0x10000000L
+	{
+		zval **val;
+
+		if (stream->context && SUCCESS == php_stream_context_get_option(
+					stream->context, "ssl", "disable_compression", &val) &&
+				zval_is_true(*val)) {
+			SSL_CTX_set_options(sslsock->ctx, SSL_OP_NO_COMPRESSION);
+		}
+	}
+#endif
+
 	sslsock->ssl_handle = php_SSL_new_from_context(sslsock->ctx, stream TSRMLS_CC);
 	if (sslsock->ssl_handle == NULL) {
 		php_error_docref(NULL TSRMLS_CC, E_WARNING, "failed to create an SSL handle");
